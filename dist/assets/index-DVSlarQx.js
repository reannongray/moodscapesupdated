(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))t(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&t(a)}).observe(document,{childList:!0,subtree:!0});function i(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function t(o){if(o.ep)return;o.ep=!0;const s=i(o);fetch(o.href,s)}})();const l={freeSound:{clientId:"wAoFYxl4qT4rBWVRgeZj",clientSecret:"1KUxLhfc1dMkeN3oJmAQUdaIJjpM0ubNUC8JqKyR"}};class u{constructor(){this.currentMode="music",this.isEmojiMode=!1,this.isPlaying=!1,this.listeners={}}updateMode(e){e!==this.currentMode&&(this.currentMode=e,this.updateUI(),this.emit("modeChange",e))}toggleEmojiMode(){this.isEmojiMode=!this.isEmojiMode,this.updateUI(),this.emit("emojiModeChange",this.isEmojiMode)}updateUI(){document.querySelectorAll("[data-mode]").forEach(i=>{i.classList.toggle("active",i.dataset.mode===this.currentMode)}),document.querySelectorAll("[data-display]").forEach(i=>{i.classList.toggle("active",i.dataset.display==="emoji"===this.isEmojiMode)});const e=document.getElementById("savePlaylistBtn");e&&(e.disabled=!1)}on(e,i){this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push(i)}emit(e,i){this.listeners[e]&&this.listeners[e].forEach(t=>t(i))}}class h{constructor(){this.colors=["#4F8FF7","#9D50FF","#FF50D6","#FFFFFF"],this.starField=null,this.shootingStarContainer=null}async initialize(){try{return await this.createContainers(),await this.createStarField(),this.initShootingStars(),!0}catch(e){return console.error("Starfield error:",e),!1}}async createContainers(){var i,t;(i=document.querySelector(".stars"))==null||i.remove(),(t=document.querySelector(".shooting-stars"))==null||t.remove(),this.starField=document.createElement("div"),this.starField.className="stars",this.shootingStarContainer=document.createElement("div"),this.shootingStarContainer.className="shooting-stars";const e={position:"fixed",top:"0",left:"0",width:"100%",height:"100%",pointerEvents:"none",zIndex:"0",overflow:"hidden",backgroundColor:"transparent"};Object.assign(this.starField.style,e),Object.assign(this.shootingStarContainer.style,e),document.body.prepend(this.shootingStarContainer),document.body.prepend(this.starField)}async createStarField(){const e=document.createDocumentFragment();for(let i=0;i<400;i++){const t=document.createElement("div");t.className="star";const o=Math.random()*2.5+.5,s=this.colors[Math.floor(Math.random()*this.colors.length)];Object.assign(t.style,{position:"absolute",width:`${o}px`,height:`${o}px`,left:`${Math.random()*100}%`,top:`${Math.random()*100}%`,background:s,borderRadius:"50%",boxShadow:`0 0 ${o*2}px ${s}`,animation:`twinkle ${Math.random()*4+2}s infinite ease-in-out`}),e.appendChild(t)}this.starField.appendChild(e)}createShootingStar(){const e=document.createElement("div");e.className="shooting-star";const i=Math.random()*100,t=Math.random()*30;Object.assign(e.style,{position:"absolute",left:`${i}%`,top:`${t}%`,width:"150px",height:"2px",opacity:"0",background:"linear-gradient(90deg, rgba(255, 255, 255, 0.8) 0%, rgba(79, 143, 247, 0.8) 20%, rgba(157, 113, 253, 0.3) 60%, transparent 100%)",transform:"rotate(225deg)",borderRadius:"100%",boxShadow:"0 0 10px rgba(255, 255, 255, 0.8)",animation:"shoot 2s ease-out forwards"}),this.shootingStarContainer.appendChild(e),setTimeout(()=>e.remove(),2e3)}initShootingStars(){setInterval(()=>{const e=Math.floor(Math.random()*2)+1;for(let i=0;i<e;i++)this.createShootingStar()},2e3)}}class m{constructor(){this.selectedMoods=new Set,this.initializeMoodData(),this.init()}initializeMoodData(){this.musicMoodCategories={Sleep:{emoji:"😴",subMoods:[{name:"DeepSleep",emoji:"🛌",description:"For deep, restful sleep"},{name:"LightSleep",emoji:"🌜",description:"For gentle relaxation"},{name:"Restful",emoji:"💤",description:"Calming sounds for rest"},{name:"Dreamy",emoji:"🌠",description:"Ethereal, dream-like music"}]},Focus:{emoji:"🎯",subMoods:[{name:"Productive",emoji:"🚀",description:"Boost your productivity"},{name:"Determined",emoji:"🎯",description:"Stay focused and driven"},{name:"Creative",emoji:"🎨",description:"Inspire creativity"},{name:"Flow",emoji:"🌊",description:"Get in the zone"}]},Explore:{emoji:"🎲",subMoods:[{name:"Surprise",emoji:"🎉",description:"Discover new sounds"},{name:"Journey",emoji:"🚢",description:"Musical adventures"},{name:"Discover",emoji:"🌍",description:"Explore new genres"},{name:"Adventure",emoji:"🏕️",description:"Bold and exciting"}]},Introspection:{emoji:"🪞",subMoods:[{name:"Reflective",emoji:"🌄",description:"Thoughtful moments"},{name:"Meditative",emoji:"🧘",description:"Deep meditation"},{name:"DeepThoughts",emoji:"💭",description:"Contemplative music"},{name:"Contemplative",emoji:"📜",description:"Inner reflection"}]},Happy:{emoji:"😊",subMoods:[{name:"Joyful",emoji:"😄",description:"Pure happiness"},{name:"Energetic",emoji:"💃",description:"Upbeat and lively"},{name:"Playful",emoji:"🤸",description:"Fun and light"},{name:"Grateful",emoji:"🙏",description:"Appreciation"}]},Relaxed:{emoji:"🌿",subMoods:[{name:"Calm",emoji:"🧘",description:"Peaceful relaxation"},{name:"Tranquil",emoji:"🍃",description:"Gentle serenity"},{name:"Soothed",emoji:"🌌",description:"Stress relief"},{name:"Peaceful",emoji:"🌺",description:"Inner peace"}]}},this.ambientMoodCategories={Nature:{emoji:"🌲",subMoods:[{name:"Forest",emoji:"🌳",description:"Woodland ambiance"},{name:"Rain",emoji:"🌧️",description:"Rainfall sounds"},{name:"Ocean",emoji:"🌊",description:"Ocean waves"},{name:"Wind",emoji:"🍃",description:"Gentle breeze"}]},City:{emoji:"🌆",subMoods:[{name:"Cafe",emoji:"☕",description:"Coffee shop ambiance"},{name:"Traffic",emoji:"🚗",description:"Urban soundscape"},{name:"Park",emoji:"🏞️",description:"City park sounds"},{name:"Market",emoji:"🏪",description:"Busy marketplace"}]},Meditation:{emoji:"🧘",subMoods:[{name:"Chimes",emoji:"🎐",description:"Wind chimes"},{name:"Bowls",emoji:"🕉️",description:"Singing bowls"},{name:"Crystal",emoji:"💎",description:"Crystal bowls"},{name:"Bells",emoji:"🔔",description:"Temple bells"}]},Elements:{emoji:"🌍",subMoods:[{name:"Fire",emoji:"🔥",description:"Crackling flames"},{name:"Water",emoji:"💧",description:"Flowing water"},{name:"Storm",emoji:"⛈️",description:"Thunder and rain"},{name:"Waves",emoji:"🌊",description:"Beach waves"}]},Spaces:{emoji:"🏛️",subMoods:[{name:"Library",emoji:"📚",description:"Quiet study space"},{name:"Garden",emoji:"🌸",description:"Garden sounds"},{name:"Temple",emoji:"⛩️",description:"Sacred space"},{name:"Cave",emoji:"🗻",description:"Cave echoes"}]},Travel:{emoji:"🚂",subMoods:[{name:"Train",emoji:"🚂",description:"Train journey"},{name:"Ship",emoji:"⛴️",description:"Ocean voyage"},{name:"Airport",emoji:"✈️",description:"Terminal ambiance"},{name:"Campfire",emoji:"🏕️",description:"Camping sounds"}]}}}init(){var e;try{if(this.container=document.getElementById("moodCategories"),this.selectedMoodsContainer=document.getElementById("selectedMoodTags"),!this.container||!this.selectedMoodsContainer)throw new Error("Required containers not found");return this.renderMoodCategories(((e=window.appState)==null?void 0:e.isEmojiMode)||!1),this.setupEventListeners(),!0}catch(i){return console.error("MoodManager initialization error:",i),!1}}setupEventListeners(){try{return document.querySelectorAll("[data-mode]").forEach(e=>{e.addEventListener("click",i=>{var t;i.preventDefault(),document.querySelectorAll("[data-mode]").forEach(o=>o.classList.remove("active")),e.classList.add("active"),window.appState&&window.appState.updateMode(e.dataset.mode),this.renderMoodCategories(((t=window.appState)==null?void 0:t.isEmojiMode)||!1)})}),document.querySelectorAll("[data-display]").forEach(e=>{e.addEventListener("click",i=>{i.preventDefault(),document.querySelectorAll("[data-display]").forEach(o=>o.classList.remove("active")),e.classList.add("active");const t=e.dataset.display==="emoji";this.renderMoodCategories(t)})}),!0}catch(e){return console.error("Error setting up mood event listeners:",e),!1}}renderMoodCategories(e){var i;if(!this.container)return!1;try{this.container.innerHTML="";const t=((i=window.appState)==null?void 0:i.currentMode)==="music"?this.musicMoodCategories:this.ambientMoodCategories;return Object.entries(t).forEach(([o,s])=>{const a=this.createMoodCard(o,s,e);this.container.appendChild(a)}),this.setupMoodListeners(),this.updateSelectedMoodsDisplay(),!0}catch(t){return console.error("Error rendering mood categories:",t),!1}}createMoodCard(e,i,t){const o=document.createElement("div");return o.className="mood-card",o.innerHTML=`
            <div class="mood-header">
                <h3>${t?i.emoji:e}</h3>
                <span class="mood-category-name">${e}</span>
            </div>
            <div class="sub-moods">
                ${i.subMoods.map(s=>`
                    <button class="cosmic-btn mood-btn ${this.selectedMoods.has(s.name)?"selected":""}" data-mood="${s.name}" title="${s.description}">
                        ${t?s.emoji:s.name}
                    </button>
                `).join("")}
            </div>
        `,o}setupMoodListeners(){this.container.querySelectorAll(".mood-btn").forEach(e=>{e.addEventListener("click",i=>{i.preventDefault(),i.stopPropagation();const t=e.dataset.mood;this.toggleMood(t),e.classList.toggle("selected",this.selectedMoods.has(t)),this.addRippleEffect(i,e)}),e.title&&(e.addEventListener("mouseenter",()=>{this.showTooltip(e,e.title)}),e.addEventListener("mouseleave",()=>{this.hideTooltip()}))})}addRippleEffect(e,i){const t=document.createElement("span");t.className="ripple";const o=i.getBoundingClientRect(),s=Math.max(o.width,o.height);t.style.width=t.style.height=`${s}px`,t.style.left=`${e.clientX-o.left-s/2}px`,t.style.top=`${e.clientY-o.top-s/2}px`,i.appendChild(t),setTimeout(()=>t.remove(),600)}showTooltip(e,i){let t=document.getElementById("mood-tooltip");t||(t=document.createElement("div"),t.id="mood-tooltip",t.className="mood-tooltip",document.body.appendChild(t)),t.textContent=i;const o=e.getBoundingClientRect();t.style.left=`${o.left+o.width/2}px`,t.style.top=`${o.top-30}px`,t.style.display="block"}hideTooltip(){const e=document.getElementById("mood-tooltip");e&&(e.style.display="none")}toggleMood(e){try{return this.selectedMoods.has(e)?this.selectedMoods.delete(e):this.selectedMoods.add(e),this.updateSelectedMoodsDisplay(),this.notifyMoodChange(),!0}catch(i){return console.error("Error toggling mood:",i),!1}}updateSelectedMoodsDisplay(){if(!this.selectedMoodsContainer)return!1;try{return this.selectedMoodsContainer.innerHTML=Array.from(this.selectedMoods).map(e=>{const i=this.findMoodData(e);return`
                        <div class="mood-tag">
                            ${(i==null?void 0:i.emoji)||""} ${e}
                            <button class="remove-mood" data-mood="${e}" aria-label="Remove ${e}">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    `}).join(""),this.selectedMoodsContainer.querySelectorAll(".remove-mood").forEach(e=>{e.addEventListener("click",i=>{i.preventDefault();const t=e.dataset.mood;this.selectedMoods.delete(t);const o=document.querySelector(`[data-mood="${t}"]`);o&&o.classList.remove("selected"),this.updateSelectedMoodsDisplay(),this.notifyMoodChange()})}),!0}catch(e){return console.error("Error updating selected moods display:",e),!1}}findMoodData(e){var t;const i=((t=window.appState)==null?void 0:t.currentMode)==="music"?this.musicMoodCategories:this.ambientMoodCategories;for(const o of Object.values(i)){const s=o.subMoods.find(a=>a.name===e);if(s)return s}return null}notifyMoodChange(){const e=new CustomEvent("moodsChanged",{detail:{moods:Array.from(this.selectedMoods)}});window.dispatchEvent(e)}getSelectedMoods(){return Array.from(this.selectedMoods)}clearMoods(){try{return this.selectedMoods.clear(),this.updateSelectedMoodsDisplay(),document.querySelectorAll(".mood-btn.selected").forEach(e=>{e.classList.remove("selected")}),this.notifyMoodChange(),!0}catch(e){return console.error("Error clearing moods:",e),!1}}destroy(){var e,i;try{return(e=this.container)==null||e.querySelectorAll(".mood-btn").forEach(t=>{t.removeEventListener("click",()=>{}),t.removeEventListener("mouseenter",()=>{}),t.removeEventListener("mouseleave",()=>{})}),(i=document.getElementById("mood-tooltip"))==null||i.remove(),this.selectedMoods.clear(),this.container&&(this.container.innerHTML=""),this.selectedMoodsContainer&&(this.selectedMoodsContainer.innerHTML=""),!0}catch(t){return console.error("Error destroying MoodManager:",t),!1}}}class p{constructor(){this.context=null,this.gainNode=null,this.analyser=null,this.audioSource=null,this.isInitialized=!1,this.currentTrackData=null,this.currentMode="music",this.hasWarnedAboutAudio=!1,this.playlist=[],this.currentTrackIndex=0,this.crossfadeDuration=2,this.fadeInterval=null,this.handleVolumeChange=this.handleVolumeChange.bind(this),this.handleProgressClick=this.handleProgressClick.bind(this),this.initializeAudioContext=this.initializeAudioContext.bind(this),this.handlePlayPause=this.handlePlayPause.bind(this)}async initialize(){if(this.isInitialized)return!0;try{return await this.initializeAudioContext(),this.setupControls(),this.isInitialized=!0,!0}catch(e){return console.error("Audio initialization error:",e),!1}}async initializeAudioContext(){if(this.context)return!0;try{const e=window.AudioContext||window.webkitAudioContext;return this.context=new e,this.gainNode=this.context.createGain(),this.gainNode.connect(this.context.destination),this.analyser=this.context.createAnalyser(),this.analyser.fftSize=256,this.gainNode.connect(this.analyser),!0}catch(e){return console.error("Audio context initialization failed:",e),!1}}setupControls(){const e=document.getElementById("volumeSlider");e&&(e.addEventListener("input",this.handleVolumeChange),this.setVolume(e.value/100));const i=document.querySelector(".progress-container");i&&i.addEventListener("click",this.handleProgressClick);const t=document.getElementById("playBtn");t&&t.addEventListener("click",this.handlePlayPause);const o=document.getElementById("nextBtn");o&&o.addEventListener("click",()=>this.nextTrack());const s=document.getElementById("prevBtn");s&&s.addEventListener("click",()=>this.previousTrack())}async loadPlaylist(e){try{this.playlist=e,this.currentTrackIndex=0,e.length>0&&(console.log("Loading first track from playlist"),await this.loadTrack(e[0]))}catch(i){console.error("Error loading playlist:",i)}}async loadTrack(e){if(!this.context||!e.previewUrl)return!1;try{this.audioSource&&await this.fadeOut();const i=await fetch(e.previewUrl);if(!i.ok)throw new Error("Failed to fetch audio");const t=await i.arrayBuffer(),o=await this.context.decodeAudioData(t);return this.audioSource&&(this.audioSource.stop(),this.audioSource.disconnect()),this.audioSource=this.context.createBufferSource(),this.audioSource.buffer=o,this.audioSource.connect(this.gainNode),this.currentTrackData=e,this.updateTrackDisplay(),await this.play(),!0}catch(i){return console.error("Error loading track:",i),!1}}async nextTrack(){this.playlist.length!==0&&(this.currentTrackIndex=(this.currentTrackIndex+1)%this.playlist.length,await this.loadTrack(this.playlist[this.currentTrackIndex]))}async previousTrack(){this.playlist.length!==0&&(this.currentTrackIndex=(this.currentTrackIndex-1+this.playlist.length)%this.playlist.length,await this.loadTrack(this.playlist[this.currentTrackIndex]))}handleVolumeChange(e){const i=e.target.value;this.setVolume(i/100)}setVolume(e){this.gainNode&&this.gainNode.gain.setValueAtTime(Math.max(0,Math.min(1,e)),this.context.currentTime)}async handlePlayPause(){this.audioSource&&(this.context.state==="running"?await this.context.suspend():await this.context.resume(),this.updatePlayButton(this.context.state==="running"))}async play(){if(!(!this.audioSource||!this.context))try{this.context.state==="suspended"&&await this.context.resume(),this.audioSource.start(0),await this.fadeIn(),this.updatePlayButton(!0)}catch(e){console.error("Playback error:",e)}}stop(){this.audioSource&&(this.audioSource.stop(),this.audioSource.disconnect(),this.audioSource=null,this.updatePlayButton(!1))}handleProgressClick(e){var o;if(!((o=this.audioSource)!=null&&o.buffer))return;const i=e.currentTarget.getBoundingClientRect(),t=(e.clientX-i.left)/i.width;this.seekToPosition(t)}seekToPosition(e){var o;if(!((o=this.audioSource)!=null&&o.buffer))return;const t=this.audioSource.buffer.duration*e;this.stop(),this.audioSource.start(0,t),this.updateProgressBar(e)}updateProgressBar(e){var t;const i=document.getElementById("audioProgress");if(i&&(i.value=e*100),(t=this.audioSource)!=null&&t.buffer){const o=this.audioSource.buffer.duration,s=o*e;this.updateTimeDisplay(s,o)}}updateTrackDisplay(){if(!this.currentTrackData)return;const e=document.getElementById("currentTrack"),i=document.getElementById("currentArtist");e&&(e.textContent=this.currentTrackData.name||"Unknown Track"),i&&(i.textContent=this.currentTrackData.artist||"")}updateTimeDisplay(e,i){const t=document.getElementById("currentTime"),o=document.getElementById("totalTime");t&&(t.textContent=this.formatTime(e)),o&&(o.textContent=this.formatTime(i))}formatTime(e){const i=Math.floor(e/60),t=Math.floor(e%60);return`${i}:${t.toString().padStart(2,"0")}`}updatePlayButton(e){const i=document.getElementById("playBtn");if(!i)return;const t=i.querySelector("i");t&&(t.className=e?"fas fa-pause":"fas fa-play")}async fadeOut(){return new Promise(e=>{const i=this.gainNode.gain.value,t=20,o=this.crossfadeDuration*1e3/t;let s=0;this.fadeInterval=setInterval(()=>{s++;const a=i*(1-s/t);this.setVolume(a),s>=t&&(clearInterval(this.fadeInterval),this.stop(),e())},o)})}async fadeIn(){return new Promise(e=>{const i=document.getElementById("volumeSlider"),t=i?i.value/100:1,o=20,s=this.crossfadeDuration*1e3/o;let a=0;this.fadeInterval=setInterval(()=>{a++;const n=t*(a/o);this.setVolume(n),a>=o&&(clearInterval(this.fadeInterval),e())},s)})}destroy(){try{this.fadeInterval&&clearInterval(this.fadeInterval),this.audioSource&&this.stop(),this.context&&this.context.close();const e=document.getElementById("volumeSlider");e&&e.removeEventListener("input",this.handleVolumeChange);const i=document.querySelector(".progress-container");i&&i.removeEventListener("click",this.handleProgressClick);const t=document.getElementById("playBtn");return t&&t.removeEventListener("click",this.handlePlayPause),this.isInitialized=!1,!0}catch(e){return console.error("Error destroying AudioPlayer:",e),!1}}}class f{constructor(){this.canvas=document.getElementById("audioVisualizer"),this.canvasCtx=this.canvas?this.canvas.getContext("2d"):null,this.colors=["#4F8FF7","#9D50FF","#FF50D6","#FFFFFF"],this.fftSize=256,this.bufferLength=0,this.particles=[],this.particleCount=100,this.baseRadius=5,this.animationFrame=null,this.dataArray=null}async initialize(e,i){return!this.canvas||!e?!1:(this.analyser=i,this.analyser.fftSize=this.fftSize,this.bufferLength=this.analyser.frequencyBinCount,this.dataArray=new Uint8Array(this.bufferLength),this.initializeCanvas(),!0)}initializeCanvas(){const e=()=>{const i=this.canvas.parentElement;i&&(this.canvas.width=i.offsetWidth,this.canvas.height=i.offsetHeight,this.initializeParticles())};e(),window.addEventListener("resize",e),this.initializeParticles()}async testWithAudioFile(e){const i=new(window.AudioContext||window.webkitAudioContext),t=i.createAnalyser();t.connect(i.destination);try{const o=await e.arrayBuffer(),s=await i.decodeAudioData(o),a=i.createBufferSource();return a.buffer=s,a.connect(t),await this.initialize(i,t),a.start(0),this.start(),!0}catch(o){return console.error("Error testing audio file:",o),!1}}initializeParticles(){this.particles=[];for(let e=0;e<this.particleCount;e++)this.particles.push({x:Math.random()*this.canvas.width,y:Math.random()*this.canvas.height,radius:Math.random()*this.baseRadius+3,color:this.colors[Math.floor(Math.random()*this.colors.length)],velocity:Math.random()*1+.5,angle:Math.random()*Math.PI*2,spin:Math.random()*.01-.0025,originalRadius:Math.random()*this.baseRadius+2})}start(){if(!this.canvas||!this.canvasCtx)return;const e=()=>{this.animationFrame=requestAnimationFrame(e),this.canvasCtx.fillStyle="rgba(11, 11, 31, 0.15)",this.canvasCtx.fillRect(0,0,this.canvas.width,this.canvas.height),this.analyser.getByteFrequencyData(this.dataArray),this.updateParticles(),this.drawParticles()};e()}updateParticles(){const e=this.canvas.width/2,i=this.canvas.height/2;this.particles.forEach((t,o)=>{const s=Math.floor(o/this.particles.length*this.dataArray.length),n=this.dataArray[s]/255;t.angle+=t.spin+n*.1;const d=t.velocity*(50+n*100);t.x=e+Math.cos(t.angle)*d,t.y=i+Math.sin(t.angle)*d,t.radius=t.originalRadius+n*this.baseRadius*2,t.x<0&&(t.x=this.canvas.width),t.x>this.canvas.width&&(t.x=0),t.y<0&&(t.y=this.canvas.height),t.y>this.canvas.height&&(t.y=0)})}drawParticles(){this.particles.forEach((e,i)=>{const t=Math.floor(i/this.particles.length*this.dataArray.length),s=this.dataArray[t]/255,a=this.canvasCtx.createRadialGradient(e.x,e.y,0,e.x,e.y,e.radius*(1+s));a.addColorStop(0,e.color),a.addColorStop(1,"transparent"),this.canvasCtx.beginPath(),this.canvasCtx.arc(e.x,e.y,e.radius*(1+s),0,Math.PI*2),this.canvasCtx.fillStyle=a,this.canvasCtx.fill(),this.drawParticleConnections(e,s)})}drawParticleConnections(e,i){this.particles.forEach(t=>{if(e===t)return;const o=e.x-t.x,s=e.y-t.y,a=Math.sqrt(o*o+s*s);if(a<100){this.canvasCtx.beginPath(),this.canvasCtx.moveTo(e.x,e.y),this.canvasCtx.lineTo(t.x,t.y);const n=(1-a/100)*.2*i;this.canvasCtx.strokeStyle=`rgba(79, 143, 247, ${n})`,this.canvasCtx.stroke()}})}stop(){this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null)}destroy(){this.stop(),this.particles=[],this.canvas&&this.canvasCtx&&this.canvasCtx.clearRect(0,0,this.canvas.width,this.canvas.height)}}class y{constructor(){this.clientId=l.freeSound.clientId,this.clientSecret=l.freeSound.clientSecret,this.baseUrl="https://freesound.org/apiv2"}async getSoundsByMood(e,i=!1){const t={DeepSleep:"sleep meditation soundtrack music",LightSleep:"soft ambient sleep music",Restful:"calm relaxation soundtrack",Dreamy:"ethereal soundtrack ambient music",Productive:"focus background music soundtrack",Creative:"inspirational background music",Flow:"flow state music soundtrack",Joyful:"uplifting happy soundtrack",Energetic:"energetic upbeat music",Playful:"playful happy soundtrack",Grateful:"positive uplifting soundtrack",Calm:"peaceful background music",Forest:"forest nature ambient",Rain:"rain storm ambient",Ocean:"ocean waves sound",Wind:"wind nature ambient",Cafe:"cafe ambience atmosphere",Traffic:"city ambience atmosphere",Park:"park nature ambient",Market:"marketplace ambience",Chimes:"wind chimes sound",Bowls:"singing bowls meditation",Crystal:"crystal bowls meditation",Bells:"temple bells meditation"};try{const o=t[e]||(i?`${e} music soundtrack`:`${e} ambient`),s=await fetch(`${this.baseUrl}/search/text/?`+new URLSearchParams({query:o,page:1,page_size:15,fields:"id,name,url,previews,duration,username",token:this.clientSecret}));if(!s.ok)throw new Error(`Freesound API error: ${s.status}`);return(await s.json()).results.map(n=>({id:n.id,name:n.name,artist:n.username,duration:n.duration,previewUrl:n.previews["preview-hq-mp3"]}))}catch(o){return console.error("Error fetching from Freesound:",o),[]}}}class c{constructor(){this.initialized=!1,this.components=new Map}static async create(){return await new c().initializeApp()}async initializeApp(){try{console.log("Starting initialization..."),console.log("Creating StarFieldManager...");const e=new h;return await e.initialize(),this.components.set("starField",e),console.log("Initializing Audio Components..."),window.audioPlayer=new p,await window.audioPlayer.initialize(),window.visualizer=new f,await window.visualizer.initialize(window.audioPlayer.context,window.audioPlayer.analyser),window.freesound=new y,console.log("Creating AppState..."),window.appState=new u,console.log("Creating MoodManager..."),window.moodManager=new m,this.setupMoodHandler(),this.renderInitialUI(),this.initialized=!0,console.log("Initialization complete"),!0}catch(e){return console.error("Initialization failed:",e),!1}}setupMoodHandler(){window.addEventListener("moodsChanged",async e=>{const i=e.detail.moods;if(i.length>0)try{const t=window.appState.currentMode==="music",o=await window.freesound.getSoundsByMood(i[0],t);o&&o.length>0&&(await window.audioPlayer.loadPlaylist(o),window.visualizer.start())}catch(t){console.error("Error handling mood selection:",t)}})}renderInitialUI(){try{window.moodManager&&window.appState&&(window.moodManager.renderMoodCategories(window.appState.isEmojiMode),this.updateToggleStates())}catch(e){console.warn("Error in initial UI render:",e)}}updateToggleStates(){try{document.querySelectorAll("[data-mode]").forEach(t=>{if(window.appState&&t instanceof HTMLElement){const o=t.dataset.mode;t.classList.toggle("active",o===window.appState.currentMode),t.setAttribute("aria-pressed",String(o===window.appState.currentMode))}}),document.querySelectorAll("[data-display]").forEach(t=>{if(window.appState&&t instanceof HTMLElement){const s=t.dataset.display==="emoji";t.classList.toggle("active",s===window.appState.isEmojiMode),t.setAttribute("aria-pressed",String(s===window.appState.isEmojiMode))}})}catch(e){console.warn("Error updating toggle states:",e)}}handleInitializationError(e){var t;console.error("Initialization error:",e);const i=document.createElement("div");i.className="error-message",i.innerHTML=`
            <h2>Initialization Error</h2>
            <p>We encountered an error while starting up. Please try refreshing the page.</p>
            <button onclick="window.location.reload()" class="cosmic-btn">
                Refresh Page
            </button>
        `,(t=document.body)==null||t.appendChild(i)}destroy(){try{for(const[,e]of this.components)e!=null&&e.destroy&&e.destroy();return!0}catch(e){return console.error("Error during cleanup:",e),!1}}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{c.create().catch(r=>{console.error("Failed to create app:",r)})}):c.create().catch(r=>{console.error("Failed to create app:",r)});
